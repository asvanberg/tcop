:root {
  --card-width: 14em;
  --card-height: calc(var(--card-width) * 39 / 28);
  --breakpoint-xl: 1000px;
  --color-green-fg: rgb(0, 115, 62);
  --color-green-bg: rgb(186, 214, 193);
  --color-blue-fg: rgb(14, 104, 171);
  --color-blue-bg: rgb(179, 206, 234);
  --color-red-fg: rgb(211, 32, 42);
  --color-red-bg: rgb(235, 159, 130);
  --color-white-fg: rgb(249, 250, 244);
  --color-white-bg: rgb(248, 231, 185);
  --color-black-fg: rgb(21, 11, 0);
  --color-black-bg: rgb(166, 159, 157);
  --color-colorless-fg: rgb(147, 134, 124);
  --color-colorless-bg: rgb(191, 185, 181);
}
@font-face {
  font-family: "Beleren2016-Bold";
  src: url("fonts/Beleren2016-Bold.woff") format("woff"),
       url("fonts/Beleren2016-Bold.ttf") format("truetype"),
       url("fonts/Beleren2016-Bold.svg") format("svg");
}
*, ::after, ::before {
  box-sizing: border-box;
}
body, body > div {
  min-height: 100vh;
  padding: 0;
  margin: 0;
  font-family: "Beleren2016-Bold";
}
body > div {
  display: flex;
  flex-direction: column;
}
header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: lightgrey;
  padding: 0 1rem;
}
main {
  flex-grow: 1;
  display: grid;
  grid-template-areas:
    "search"
    "commander"
    "deck"
    "info";
}
@media (min-width: 750px) {
  main {
    grid-template-areas:
      "search commander"
      "deck deck"
      "info info";
    grid-template-columns: calc(2em + var(--card-width)) 1fr;
  }
}
@media (min-width: 1000px) {
  main {
    grid-template-areas:
      "search deck commander"
      "search info info";
    grid-template-columns: calc(2em + var(--card-width)) 1fr calc(2em + var(--card-width));
    grid-template-rows: 1fr minmax(10vh, auto);
  }
}
img {
  max-width: 100%;
}
menu {
  list-style-type: none;
  margin: 0;
  padding: 0;
  display: flex;
  background-color: lightgrey;
}
menu button {
  padding: 0.75rem 1rem;
  background-color: transparent;
  border: none;
  position: relative;
}
menu button:hover {
  background-color: white;
  cursor: pointer;
}
menu button ul {
  position: absolute;
  top: 100%;
  left: 0;
  list-style-type: none;
  padding: 0;
  margin: 0;
  background-color: lightgrey;
}
#search {
  grid-area: search;
  background-color: red;
}
#search input {
  width: 100%;
}
#search ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
}
#search .search-result {
  border: 10px solid rgb(24, 21, 16);
  border-radius: 10px;
  background-color: rgb(208, 200, 196);
  padding: 5px 3px;
}
#search .search-result > div:first-child {
  border: 2px solid black;
  padding: 0 0.2em;
  border-radius: 0.5em / 1em;
}
#search .search-result div.card {
  display: none;
}
@media not all and (hover: hover) and (pointer: fine) {
  #search .search-result.expanded div.card {
    display: inline-block;
  }
  #search .search-result.expanded div.card .controls {
    display: flex;
    flex-direction: row;
    position: static;
  }
  #search .search-result.expanded > div:first-child {
    display: none;
  }
  #search .search-result.expanded {
    border: none;
    background-color: transparent;
    padding: 0;
  }
}
@media (hover: hover) and (pointer: fine) {
  #search .search-result:hover > div:first-child {
    display: none;
  }
  #search .search-result:hover {
    border: none;
    background-color: transparent;
    padding: 0;
  }
  #search .search-result:hover div.card {
    display: inline-block;
  }
  #search .search-result div.card .controls {
    display: none;
  }
}
#deck {
  grid-area: deck;
  background-color: yellow;
  display: grid;
  grid-template-columns: 1fr auto;
  grid-template-rows: auto 1fr;
}
#deck .cards {
  display: flex;
  flex-wrap: wrap;
  grid-column: 1 / -1;
}
#deck div.card + div.card {
  margin-top: calc(2em - var(--card-height));
}
#deck div.card:hover + div.card {
  margin-top: -5%;
}
#deck .tools {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  gap: 0.5em;
}
#deck menu li {
  padding: 0.3em;
  cursor: pointer;
}
#deck menu li:hover {
  background-color: white;
}
#deck menu:is(.main, .sub) > li {
  position: relative;
  border: 1px solid black;
  border-left: none;
}
#deck menu:is(.main, .sub) > li:first-child {
  border-left: 1px solid black;
  border-top-left-radius: 4px;
  border-bottom-left-radius: 4px;
}
#deck menu:is(.main, .sub) > li:last-child {
  border-right: 1px solid black;
  border-top-right-radius: 4px;
}
#deck menu:is(.main, .sub) > li:last-child:not(.open) {
  border-bottom-right-radius: 4px;
}
#deck li.open {
  border-bottom-right-radius: 0;
}
#deck *:not(.open) > .dropdown {
  display: none;
}
#deck .dropdown-container {
  position: relative;
  cursor: pointer;
}
#deck menu.dropdown {
  position: absolute;
  top: 100%;
  left: -1px;
  min-width: calc(100% + 2px);
  border: 1px solid black;
  border-radius: 0 0 4px 4px;
  flex-direction: column;
  z-index: 1;
  white-space: nowrap;
}
#deck :not(li) > menu.dropdown {
  border-radius: 4px;
}
#commanders {
  grid-area: commander;
  background-color: green;
  display: flex;
  flex-wrap: nowrap;
}
@media (min-width: 1000px) {
  #commanders {
    flex-direction: column;
  }
}
#info {
  grid-area: info;
  background-color: lightblue;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 1em;
  padding: 1em;
}
#search, #deck, #commanders {
  padding: 1rem;
}
img.card {
  border-radius: 4%;
  width: var(--card-width);
  height: var(--card-height);
}
div.card {
  position: relative;
}
div.card div.controls {
  display: none;
  position: absolute;
  top: 10%;
  right: 6%;
}
div.card:hover div.controls {
  display: flex;
}
div.card div.controls button {
  padding: 0.5em 0.8em;
  font-size: 80%;
  border: 1px solid white;
  background-color: #444;
  color: white;
  cursor: pointer;
}
div.card div.controls button:hover {
  width: auto;
}
@media (hover: hover) {
  div.card div.contrels button {
    width: 2.5em;
  }
  div.card div.controls button span {
    display: none;
  }
}
div.card div.controls button:hover span {
  display: inline;
}
.chart .w {
  fill: var(--color-white-fg);
}
.chart .u {
  fill: var(--color-blue-fg);
}
.chart .b {
  fill: var(--color-black-fg);
}
.chart .r {
  fill: var(--color-red-fg);
}
.chart .g {
  fill: var(--color-green-fg);
}
.chart .c {
  fill: var(--color-colorless-fg);
}
.chart.pie path {
  stroke: black;
  stroke-width: 0.05;
}
@media (hover: hover) and (pointer: fine) {
  .chart.column g.column text.value {
    display: none;
  }
  .chart.column g.column:hover text.value {
    display: initial;
  }
}
